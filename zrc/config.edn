{ns     config
 import #{aidbox
          aidbox.config
          awf.scheduler
          box.npi
          aidbox.index.v1
          aidbox.index}

 db-config
 {:zen/tags #{aidbox.config/db}
  :pool     {:connection-timeout  30000
             :idle-timeout        1000
             :minimum-idle        2
             :maximum-pool-size   30
             :connection-init-sql "SELECT 1"}

  :database #env PGDATABASE
  :host     #env PGHOST
  :port     #env PGPORT
  :user     #env PGUSER
  :password #env PGPASSWORD}

 web-config
 {:zen/tags              #{aidbox.config/web}
  :base-url              #env AIDBOX_BASE_URL
  :port                  #env-integer AIDBOX_PORT
  :thread                8
  :max-body              10000000
  :request-save-raw-body false}

 search-config
 {:zen/tags         #{aidbox.config/search}
  :zen-fhir         :enable
  :fhir-comparisons true
  :default-params   {:timeout 30
                     :total   "none"
                     :count   100}
  :chain            {:subselect true}}

 compatibility-config
 {:zen/tags   #{aidbox.config/compatibility}
  :validation {:json-schema {:regex #{:fhir-datetime}}}
  :auth       {:pkce {:code-challenge {:s256 {:conformant true}}}}}

 auth
 {:zen/tags       #{aidbox.config/auth}
  :login-redirect "/ui/console"
  :keys {:secret #env BOX_AUTH_KEYS_SECRET
         :private #env BOX_AUTH_KEYS_PRIVATE
         :public #env BOX_AUTH_KEYS_PUBLIC}}

 base-config
 {:zen/tags                #{aidbox.config/config}
  :web                     web-config
  :db                      db-config
  :search                  search-config
  :compatibility           compatibility-config
  :auth                    auth

  :aidbox-license #env AIDBOX_LICENSE

  :fhir-version            "4.0.1"
  :compliant-mode-enabled? true
  :override-createdat-url  "http://fhir.aidbox.app/extension/createdat"
  :correct-aidbox-format   true
  :dev-mode                #env-boolean AIDBOX_DEV_MODE
  :stdout-pretty           true
  :disable-legacy-seed     true}

 admin-user-seed
 {:zen/tags #{aidbox/service}
  :engine   aidbox/seed-v2
  :resources
  {:User {:admin {:password #env AIDBOX_ADMIN_PASSWORD}}
   :AccessPolicy {:allow-admin-user {:engine "allow" :link   [{:resourceType "User" :id "admin"}]}}}}


 root-client-seed
 {:zen/tags #{aidbox/service}
  :engine   aidbox/seed-v2
  :resources
  {:Client {:root
            {:name        "Root client"
             :secret      #env AIDBOX_CLIENT_SECRET
             :first_party true
             :grant_types ["basic"]}}

   :AccessPolicy {:allow-root-client
                  {:engine "allow"
                   :link   [{:resourceType "Client" :id "root"}]}}}}

 npi-import-rule
 {:zen/tags #{awf.scheduler/rule}
  :schedule "0 7 * * *"
  :concurrency-policy "forbid"
  :execute-on-setup true
  :task-request {:definition box.npi/sync-npi
                 :params     {}}}

 create-indexes-rule
 {:zen/tags #{awf.scheduler/rule}
  :schedule "1 1 1 6 1"
  :concurrency-policy "forbid"
  :execute-on-setup true
  :task-request {:definition aidbox.task/run-rpc
                 :params {:method "aidbox.index.v1/sync-indexes"
                          :params {}}}}

 scheduler-service
 {:zen/tags #{aidbox/service}
  :engine awf.scheduler/task-scheduler-service-engine
  :rules #{npi-import-rule create-indexes-rule}}

 practitioner-name-gin-index
 {:zen/tags #{aidbox.index.v1/index}
  :table "practitioner"
  :type :gin
  :expression "CAST(jsonb_path_query_array(\"practitioner\".resource, '($.\"name\"[*]).** ? (@.type() == \"string\")'::jsonpath) AS \"text\") gin_trgm_ops"}
 
 practitioner-name-given-gin-index
 {:zen/tags #{aidbox.index.v1/index}
  :table "practitioner"
  :type :gin
  :expression "CAST(jsonb_path_query_array(\"practitioner\".resource, '($.\"name\".\"given\"[*]).** ? (@.type() == \"string\")'::jsonpath) AS \"text\") gin_trgm_ops"}

 practitioner-name-family-gin-index
 {:zen/tags #{aidbox.index.v1/index}
  :table "practitioner"
  :type :gin
  :expression "CAST(jsonb_path_query_array(\"practitioner\".resource, '($.\"name\".\"family\"[*]).** ? (@.type() == \"string\")'::jsonpath) AS \"text\") gin_trgm_ops"}

 practitioner-repository
 {:zen/tags #{aidbox.repository.v1/repository}
  :resourceType "Practitioner"
  :indexes #{practitioner-name-gin-index practitioner-name-given-gin-index practitioner-name-family-gin-index}
  :extra-parameter-sources :all
  :search-parameters #{}}

 repositories
 {:zen/tags #{aidbox/service}
  :engine aidbox.repository.v1/engine
  :load-default true
  :repositories #{practitioner-repository}}
 }
